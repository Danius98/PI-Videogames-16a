{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JC REPARACIONES\\\\Desktop\\\\Visual Studio Code\\\\HENRY\\\\PI\\\\PI-Videogames\\\\PI-Videogames-16a\\\\client\\\\src\\\\Components\\\\Videogames\\\\Pagination.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Pagination.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaginationComponent() {\n  _s();\n  const renderData = data => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((todo, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: todo.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  };\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerpage, setItemsPerpage] = useState(5);\n  const [pageNumberLimit, setPageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\n  const handleClick = event => {\n    setCurrentPage(Number(event.target.id));\n  };\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(data.length / itemsPerpage); i++) {\n    pages.push(i);\n  }\n  const indexOfLastItem = currentPage * itemsPerpage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerpage;\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n  console.log(pages); // cantidad de páginas, sacada de la longitud de los datos divido por los items por página\n  console.log(currentPage); // página actual. por defecto se empieza en la primera página\n  console.log(itemsPerpage); // cantidad de objetos por página. por defecto 5\n  console.log(indexOfFirstItem); // primer elemento de la página. Sacado tomando el indice del último elemento de la página restando los items por página(def: 5)\n  console.log(indexOfLastItem); // ultimo elemento de la página. Sacado tomando la página actual multiplicándola por los elementos por página(def: 5)\n  console.log(currentItems); // Elementos mostrados en la página donde hacemos referencia. Mostrado con el método slice entre el primer elemento y el último\n  console.log(pageNumberLimit); // Limite de paginas mostradas antes de mostrar las sigueintes (def: 5)\n  console.log(minPageNumberLimit); // Límite de páginas que se muestran (def: 5)\n  console.log(maxPageNumberLimit); //\n\n  const renderPageNumbers = pages.map(number => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: number,\n        onClick: handleClick,\n        className: currentPage == number ? \"active\" : null,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  });\n  const handleNextBtn = () => {\n    setCurrentPage(currentPage + 1);\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n  const handlePrevBtn = () => {\n    setCurrentPage(currentPage - 1);\n    if ((currentPage - 1) % pageNumberLimit == 0) {\n      setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n  let pageIncrementBtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handleNextBtn,\n      children: \" \\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 28\n    }, this);\n  }\n  let pageDecrementBtn = null;\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handlePrevBtn,\n      children: \" \\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 28\n    }, this);\n  }\n  const handleLoadMore = () => {\n    setItemsPerpage(itemsPerpage + 5);\n  };\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos\").then(response => response.json()).then(json => setData(json));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }, this), renderData(currentItems), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pageNumbers\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevBtn,\n          disabled: currentPage == pages[0] ? true : false,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), pageDecrementBtn, renderPageNumbers, pageIncrementBtn, /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextBtn,\n          disabled: currentPage == pages[pages.length - 1] ? true : false,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"loadmore\",\n      onClick: handleLoadMore,\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(PaginationComponent, \"4dl2TA+ER7eU0/NXE6QK30RnnzE=\");\n_c = PaginationComponent;\nvar _c;\n$RefreshReg$(_c, \"PaginationComponent\");","map":{"version":3,"names":["React","useState","useEffect","PaginationComponent","renderData","data","map","todo","index","title","setData","currentPage","setCurrentPage","itemsPerpage","setItemsPerpage","pageNumberLimit","setPageNumberLimit","maxPageNumberLimit","setMaxPageNumberLimit","minPageNumberLimit","setMinPageNumberLimit","handleClick","event","Number","target","id","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","console","log","renderPageNumbers","number","handleNextBtn","handlePrevBtn","pageIncrementBtn","pageDecrementBtn","handleLoadMore","fetch","then","response","json"],"sources":["C:/Users/JC REPARACIONES/Desktop/Visual Studio Code/HENRY/PI/PI-Videogames/PI-Videogames-16a/client/src/Components/Videogames/Pagination.jsx"],"sourcesContent":["import React, { useState , useEffect} from \"react\";\r\nimport \"./Pagination.css\"\r\n\r\nexport default function PaginationComponent(){\r\n\r\n    const renderData = (data) => {\r\n        return(\r\n            <ul>\r\n                {data.map((todo, index) => {\r\n                    return <li key={index}>{todo.title}</li>\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [itemsPerpage, setItemsPerpage] = useState(5);\r\n\r\n    const [pageNumberLimit, setPageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\r\n    const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\r\n\r\n    const handleClick = (event) => {\r\n        setCurrentPage(Number(event.target.id))\r\n    }\r\n\r\n    const pages = [];\r\n    for(let i = 1; i <= Math.ceil(data.length/itemsPerpage); i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    const indexOfLastItem = currentPage * itemsPerpage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerpage;\r\n    const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    console.log(pages) // cantidad de páginas, sacada de la longitud de los datos divido por los items por página\r\n    console.log(currentPage) // página actual. por defecto se empieza en la primera página\r\n    console.log(itemsPerpage) // cantidad de objetos por página. por defecto 5\r\n    console.log(indexOfFirstItem) // primer elemento de la página. Sacado tomando el indice del último elemento de la página restando los items por página(def: 5)\r\n    console.log(indexOfLastItem) // ultimo elemento de la página. Sacado tomando la página actual multiplicándola por los elementos por página(def: 5)\r\n    console.log(currentItems) // Elementos mostrados en la página donde hacemos referencia. Mostrado con el método slice entre el primer elemento y el último\r\n    console.log(pageNumberLimit) // Limite de paginas mostradas antes de mostrar las sigueintes (def: 5)\r\n    console.log(minPageNumberLimit) // Límite de páginas que se muestran (def: 5)\r\n    console.log(maxPageNumberLimit) //\r\n\r\n    const renderPageNumbers = pages.map(number=>{\r\n        if(number < maxPageNumberLimit + 1 && number>minPageNumberLimit){\r\n            return(\r\n                <li key={number} \r\n                id={number} \r\n                onClick={handleClick}\r\n                className={currentPage == number ? \"active\" : null}\r\n                >\r\n                    {number}\r\n                </li>\r\n            ) \r\n        } else {\r\n            return null\r\n        }\r\n    })\r\n\r\n    const handleNextBtn = () => {\r\n        setCurrentPage(currentPage + 1);\r\n\r\n        if(currentPage + 1 > maxPageNumberLimit){\r\n            setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n            setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        }\r\n    }\r\n\r\n    const handlePrevBtn = () => {\r\n        setCurrentPage(currentPage - 1);\r\n\r\n        if((currentPage - 1) % pageNumberLimit == 0){\r\n            setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n            setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        }\r\n    }\r\n\r\n    let pageIncrementBtn = null;\r\n    if(pages.length > maxPageNumberLimit){\r\n        pageIncrementBtn = <li onClick={handleNextBtn}> &hellip;</li>\r\n    }\r\n\r\n    let pageDecrementBtn = null;\r\n    if(minPageNumberLimit >= 1){\r\n        pageDecrementBtn = <li onClick={handlePrevBtn}> &hellip;</li>\r\n    }\r\n\r\n    const handleLoadMore = () => {\r\n        setItemsPerpage(itemsPerpage + 5)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n          .then((response) => response.json())\r\n          .then((json) => setData(json));\r\n      }, []);\r\n\r\n\r\n    return(\r\n        <>\r\n        <h1>To do List</h1> <br/>\r\n        {renderData(currentItems)}\r\n        <ul className=\"pageNumbers\">\r\n            <li>\r\n                <button\r\n                onClick={handlePrevBtn}\r\n                disabled={currentPage == pages[0] ? true : false}\r\n                >Prev</button>\r\n            </li>\r\n            {pageDecrementBtn}\r\n            {renderPageNumbers}\r\n            {pageIncrementBtn}\r\n            <li>\r\n                <button\r\n                onClick={handleNextBtn}\r\n                disabled={currentPage == pages[pages.length - 1] ? true : false}\r\n                >Next</button>\r\n            </li>\r\n            </ul>\r\n            <button className=\"loadmore\"\r\n            onClick={handleLoadMore}>\r\n                Load More\r\n            </button>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAO,OAAO;AAClD,OAAO,kBAAkB;AAAA;AAAA;AAEzB,eAAe,SAASC,mBAAmB,GAAE;EAAA;EAEzC,MAAMC,UAAU,GAAIC,IAAI,IAAK;IACzB,oBACI;MAAA,UACKA,IAAI,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACvB,oBAAO;UAAA,UAAiBD,IAAI,CAACE;QAAK,GAAlBD,KAAK;UAAA;UAAA;UAAA;QAAA,QAAmB;MAC5C,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACD;EAEb,CAAC;EAED,MAAM,CAACH,IAAI,EAAEK,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACgB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACkB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAE/D,MAAMoB,WAAW,GAAIC,KAAK,IAAK;IAC3BV,cAAc,CAACW,MAAM,CAACD,KAAK,CAACE,MAAM,CAACC,EAAE,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIC,IAAI,CAACC,IAAI,CAACxB,IAAI,CAACyB,MAAM,GAACjB,YAAY,CAAC,EAAEc,CAAC,EAAE,EAAE;IAC1DD,KAAK,CAACK,IAAI,CAACJ,CAAC,CAAC;EACjB;EAGA,MAAMK,eAAe,GAAGrB,WAAW,GAAGE,YAAY;EAClD,MAAMoB,gBAAgB,GAAGD,eAAe,GAAGnB,YAAY;EACvD,MAAMqB,YAAY,GAAG7B,IAAI,CAAC8B,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;EAElEI,OAAO,CAACC,GAAG,CAACX,KAAK,CAAC,EAAC;EACnBU,OAAO,CAACC,GAAG,CAAC1B,WAAW,CAAC,EAAC;EACzByB,OAAO,CAACC,GAAG,CAACxB,YAAY,CAAC,EAAC;EAC1BuB,OAAO,CAACC,GAAG,CAACJ,gBAAgB,CAAC,EAAC;EAC9BG,OAAO,CAACC,GAAG,CAACL,eAAe,CAAC,EAAC;EAC7BI,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC,EAAC;EAC1BE,OAAO,CAACC,GAAG,CAACtB,eAAe,CAAC,EAAC;EAC7BqB,OAAO,CAACC,GAAG,CAAClB,kBAAkB,CAAC,EAAC;EAChCiB,OAAO,CAACC,GAAG,CAACpB,kBAAkB,CAAC,EAAC;;EAEhC,MAAMqB,iBAAiB,GAAGZ,KAAK,CAACpB,GAAG,CAACiC,MAAM,IAAE;IACxC,IAAGA,MAAM,GAAGtB,kBAAkB,GAAG,CAAC,IAAIsB,MAAM,GAACpB,kBAAkB,EAAC;MAC5D,oBACI;QACA,EAAE,EAAEoB,MAAO;QACX,OAAO,EAAElB,WAAY;QACrB,SAAS,EAAEV,WAAW,IAAI4B,MAAM,GAAG,QAAQ,GAAG,IAAK;QAAA,UAE9CA;MAAM,GALFA,MAAM;QAAA;QAAA;QAAA;MAAA,QAMV;IAEb,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACJ,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAG,MAAM;IACxB5B,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IAE/B,IAAGA,WAAW,GAAG,CAAC,GAAGM,kBAAkB,EAAC;MACpCC,qBAAqB,CAACD,kBAAkB,GAAGF,eAAe,CAAC;MAC3DK,qBAAqB,CAACD,kBAAkB,GAAGJ,eAAe,CAAC;IAC/D;EACJ,CAAC;EAED,MAAM0B,aAAa,GAAG,MAAM;IACxB7B,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IAE/B,IAAG,CAACA,WAAW,GAAG,CAAC,IAAII,eAAe,IAAI,CAAC,EAAC;MACxCG,qBAAqB,CAACD,kBAAkB,GAAGF,eAAe,CAAC;MAC3DK,qBAAqB,CAACD,kBAAkB,GAAGJ,eAAe,CAAC;IAC/D;EACJ,CAAC;EAED,IAAI2B,gBAAgB,GAAG,IAAI;EAC3B,IAAGhB,KAAK,CAACI,MAAM,GAAGb,kBAAkB,EAAC;IACjCyB,gBAAgB,gBAAG;MAAI,OAAO,EAAEF,aAAc;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK;EACjE;EAEA,IAAIG,gBAAgB,GAAG,IAAI;EAC3B,IAAGxB,kBAAkB,IAAI,CAAC,EAAC;IACvBwB,gBAAgB,gBAAG;MAAI,OAAO,EAAEF,aAAc;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK;EACjE;EAEA,MAAMG,cAAc,GAAG,MAAM;IACzB9B,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;EACrC,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZ2C,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKtC,OAAO,CAACsC,IAAI,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAGR,oBACI;IAAA,wBACA;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,KAAC;MAAA;MAAA;MAAA;IAAA,QAAK,EACxB5C,UAAU,CAAC8B,YAAY,CAAC,eACzB;MAAI,SAAS,EAAC,aAAa;MAAA,wBACvB;QAAA,uBACI;UACA,OAAO,EAAEO,aAAc;UACvB,QAAQ,EAAE9B,WAAW,IAAIe,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,KAAM;UAAA,UAChD;QAAI;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACb,EACJiB,gBAAgB,EAChBL,iBAAiB,EACjBI,gBAAgB,eACjB;QAAA,uBACI;UACA,OAAO,EAAEF,aAAc;UACvB,QAAQ,EAAE7B,WAAW,IAAIe,KAAK,CAACA,KAAK,CAACI,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,KAAM;UAAA,UAC/D;QAAI;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACb;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,eACL;MAAQ,SAAS,EAAC,UAAU;MAC5B,OAAO,EAAEc,cAAe;MAAA,UAAC;IAEzB;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBACV;AAEX;AAAC,GA9HuBzC,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}