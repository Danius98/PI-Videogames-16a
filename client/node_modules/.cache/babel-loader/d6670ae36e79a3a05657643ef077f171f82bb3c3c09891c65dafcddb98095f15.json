{"ast":null,"code":"import { GET_VIDEOGAMES, GET_VIDEOGAME_NAME, GET_VIDEOGAME_ID, GET_PLATFORMS, GET_GENEROS, NAME_ORDER_A, NAME_ORDER_Z, GENERO, CREATED, GAME_RTN_MAX, GAME_RTN_MIN } from '../actions/index.js';\nconst Title_Order = (a, b) => {\n  if (a.Titulo < b.Titulo) return -1;\n  if (a.Titulo > b.Titulo) return 1;\n  return 0;\n};\n_c = Title_Order;\nconst Rtn_Order = (a, b) => {\n  if (a.Rating < b.Rating) return -1;\n  if (a.Rating > b.Rating) return 1;\n  return 0;\n};\n_c2 = Rtn_Order;\nconst initialState = {\n  Videogames: [],\n  ExactGame: [],\n  GameInfo: [],\n  Generos: [],\n  Consolas: {}\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === GET_VIDEOGAMES) {\n    return {\n      ...state,\n      Videogames: action.payload,\n      ExactGame: action.payload\n    };\n  }\n  if (action.type === GET_VIDEOGAME_NAME) {\n    return {\n      ...state,\n      Videogames: action.payload\n    };\n  }\n  if (action.type === GET_VIDEOGAME_ID) {\n    return {\n      ...state,\n      GameInfo: action.payload\n    };\n  }\n  if (action.type === GET_PLATFORMS) {\n    return {\n      ...state,\n      Consolas: action.payload\n    };\n  }\n  if (action.type === GET_GENEROS) {\n    return {\n      ...state,\n      Generos: action.payload\n    };\n  }\n  if (action.type === NAME_ORDER_A) {\n    return {\n      ...state,\n      Videogames: state.Videogames.slice().sort(Title_Order)\n    };\n  }\n  ;\n  if (action.type === NAME_ORDER_Z) {\n    return {\n      ...state,\n      Videogames: state.Videogames.slice().sort(Title_Order).reverse()\n    };\n  }\n  ;\n  if (action.type === GENERO) {\n    const allGames = state.ExactGame;\n    const typeFilter = action.payload === \"allGenre\" ? allGames : allGames.filter(_ref => {\n      let {\n        Generos\n      } = _ref;\n      return Generos.find(_ref2 => {\n        let {\n          Genero\n        } = _ref2;\n        return Genero === action.payload;\n      });\n    });\n    return {\n      ...state,\n      Videogames: typeFilter\n    };\n  }\n  ;\n  if (action.type === CREATED) {\n    const Existe = state.ExactGame;\n    let createdFilter;\n    if (action.payload === \"Todo\") {\n      createdFilter = Existe;\n    }\n    if (action.payload === \"true\") {\n      createdFilter = Existe.filter(e => e.Creado === true);\n    }\n    if (action.payload === \"false\") {\n      createdFilter = Existe.filter(e => e.Creado === false);\n    }\n    return {\n      ...state,\n      Videogames: createdFilter\n    };\n  }\n  ;\n  if (action.type === GAME_RTN_MAX) {\n    return {\n      ...state,\n      Videogames: state.Videogames.slice().sort(Rtn_Order).reverse()\n    };\n  }\n  if (action.type === GAME_RTN_MIN) {\n    return {\n      ...state,\n      Videogames: state.Videogames.slice().sort(Rtn_Order)\n    };\n  }\n  return state;\n}\nexport default rootReducer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Title_Order\");\n$RefreshReg$(_c2, \"Rtn_Order\");","map":{"version":3,"names":["GET_VIDEOGAMES","GET_VIDEOGAME_NAME","GET_VIDEOGAME_ID","GET_PLATFORMS","GET_GENEROS","NAME_ORDER_A","NAME_ORDER_Z","GENERO","CREATED","GAME_RTN_MAX","GAME_RTN_MIN","Title_Order","a","b","Titulo","Rtn_Order","Rating","initialState","Videogames","ExactGame","GameInfo","Generos","Consolas","rootReducer","state","action","type","payload","slice","sort","reverse","allGames","typeFilter","filter","find","Genero","Existe","createdFilter","e","Creado"],"sources":["C:/Users/JC REPARACIONES/Desktop/Visual Studio Code/HENRY/PI/PI-Videogames/PI-Videogames-16a/client/src/redux/reducers/index.js"],"sourcesContent":["import { \r\nGET_VIDEOGAMES,\r\nGET_VIDEOGAME_NAME,\r\nGET_VIDEOGAME_ID,\r\nGET_PLATFORMS,\r\nGET_GENEROS,\r\nNAME_ORDER_A,\r\nNAME_ORDER_Z,\r\nGENERO,\r\nCREATED,\r\nGAME_RTN_MAX,\r\nGAME_RTN_MIN } from '../actions/index.js';\r\n\r\nconst Title_Order = (a, b) => {\r\n    if(a.Titulo < b.Titulo) return -1\r\n    if(a.Titulo > b.Titulo) return 1\r\n    return 0\r\n  }\r\n\r\n  const Rtn_Order = (a, b) => {\r\n    if(a.Rating < b.Rating) return -1\r\n    if(a.Rating > b.Rating) return 1\r\n    return 0\r\n}\r\n\r\nconst initialState = {\r\n    Videogames: [],\r\n    ExactGame: [],\r\n    GameInfo: [],\r\n    Generos: [],\r\n    Consolas: {}\r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    if(action.type === GET_VIDEOGAMES) {\r\n        return {\r\n            ...state,\r\n            Videogames: action.payload,\r\n            ExactGame: action.payload\r\n        };\r\n    }\r\n    if(action.type === GET_VIDEOGAME_NAME) {\r\n        return {\r\n            ...state,\r\n            Videogames: action.payload\r\n        };\r\n    }\r\n    if(action.type === GET_VIDEOGAME_ID) {\r\n        return {\r\n            ...state,\r\n            GameInfo: action.payload\r\n        }\r\n    }\r\n    if(action.type === GET_PLATFORMS) {\r\n        return {\r\n            ...state,\r\n            Consolas: action.payload\r\n        };\r\n    }\r\n    if(action.type === GET_GENEROS) {\r\n        return {\r\n            ...state,\r\n            Generos: action.payload\r\n        };\r\n    }\r\n    if(action.type === NAME_ORDER_A) {\r\n        return {\r\n            ...state,\r\n            Videogames: state.Videogames.slice().sort(Title_Order)\r\n        }\r\n    };\r\n    if(action.type === NAME_ORDER_Z) {       \r\n         return {\r\n            ...state,\r\n            Videogames: state.Videogames.slice().sort(Title_Order).reverse()\r\n        }\r\n    };\r\n    if(action.type === GENERO) {\r\n        const allGames = state.ExactGame\r\n        const typeFilter = \r\n        action.payload === \"allGenre\" \r\n        ? allGames\r\n        : allGames.filter(({Generos}) => {\r\n                return Generos.find(({Genero}) => Genero === action.payload)}\r\n                 )\r\n                 return {\r\n                     ...state,\r\n                     Videogames: typeFilter,\r\n                 }\r\n    };\r\n    if(action.type === CREATED) {\r\n        const Existe = state.ExactGame\r\n        let createdFilter;\r\n        if(action.payload === \"Todo\") {\r\n            createdFilter = Existe\r\n        }\r\n        if(action.payload === \"true\") {\r\n            createdFilter = Existe.filter((e) => e.Creado === true)\r\n        }\r\n        if(action.payload === \"false\") {\r\n            createdFilter = Existe.filter((e) => e.Creado === false)\r\n        }\r\n        return  {\r\n                ...state,\r\n                Videogames: createdFilter,\r\n                 }\r\n    };\r\n    if(action.type === GAME_RTN_MAX) {\r\n        return {\r\n            ...state,\r\n            Videogames: state.Videogames.slice().sort(Rtn_Order).reverse()\r\n        }\r\n    }\r\n    if(action.type === GAME_RTN_MIN) {\r\n        return {\r\n            ...state,\r\n            Videogames: state.Videogames.slice().sort(Rtn_Order)\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,SACAA,cAAc,EACdC,kBAAkB,EAClBC,gBAAgB,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,YAAY,EACZC,MAAM,EACNC,OAAO,EACPC,YAAY,EACZC,YAAY,QAAQ,qBAAqB;AAEzC,MAAMC,WAAW,GAAG,CAACC,CAAC,EAAEC,CAAC,KAAK;EAC1B,IAAGD,CAAC,CAACE,MAAM,GAAGD,CAAC,CAACC,MAAM,EAAE,OAAO,CAAC,CAAC;EACjC,IAAGF,CAAC,CAACE,MAAM,GAAGD,CAAC,CAACC,MAAM,EAAE,OAAO,CAAC;EAChC,OAAO,CAAC;AACV,CAAC;AAAA,KAJGH,WAAW;AAMf,MAAMI,SAAS,GAAG,CAACH,CAAC,EAAEC,CAAC,KAAK;EAC1B,IAAGD,CAAC,CAACI,MAAM,GAAGH,CAAC,CAACG,MAAM,EAAE,OAAO,CAAC,CAAC;EACjC,IAAGJ,CAAC,CAACI,MAAM,GAAGH,CAAC,CAACG,MAAM,EAAE,OAAO,CAAC;EAChC,OAAO,CAAC;AACZ,CAAC;AAAA,MAJOD,SAAS;AAMjB,MAAME,YAAY,GAAG;EACjBC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,CAAC;AACf,CAAC;AAED,SAASC,WAAW,GAA+B;EAAA,IAA9BC,KAAK,uEAAGP,YAAY;EAAA,IAAEQ,MAAM;EAC7C,IAAGA,MAAM,CAACC,IAAI,KAAK1B,cAAc,EAAE;IAC/B,OAAO;MACH,GAAGwB,KAAK;MACRN,UAAU,EAAEO,MAAM,CAACE,OAAO;MAC1BR,SAAS,EAAEM,MAAM,CAACE;IACtB,CAAC;EACL;EACA,IAAGF,MAAM,CAACC,IAAI,KAAKzB,kBAAkB,EAAE;IACnC,OAAO;MACH,GAAGuB,KAAK;MACRN,UAAU,EAAEO,MAAM,CAACE;IACvB,CAAC;EACL;EACA,IAAGF,MAAM,CAACC,IAAI,KAAKxB,gBAAgB,EAAE;IACjC,OAAO;MACH,GAAGsB,KAAK;MACRJ,QAAQ,EAAEK,MAAM,CAACE;IACrB,CAAC;EACL;EACA,IAAGF,MAAM,CAACC,IAAI,KAAKvB,aAAa,EAAE;IAC9B,OAAO;MACH,GAAGqB,KAAK;MACRF,QAAQ,EAAEG,MAAM,CAACE;IACrB,CAAC;EACL;EACA,IAAGF,MAAM,CAACC,IAAI,KAAKtB,WAAW,EAAE;IAC5B,OAAO;MACH,GAAGoB,KAAK;MACRH,OAAO,EAAEI,MAAM,CAACE;IACpB,CAAC;EACL;EACA,IAAGF,MAAM,CAACC,IAAI,KAAKrB,YAAY,EAAE;IAC7B,OAAO;MACH,GAAGmB,KAAK;MACRN,UAAU,EAAEM,KAAK,CAACN,UAAU,CAACU,KAAK,EAAE,CAACC,IAAI,CAAClB,WAAW;IACzD,CAAC;EACL;EAAC;EACD,IAAGc,MAAM,CAACC,IAAI,KAAKpB,YAAY,EAAE;IAC5B,OAAO;MACJ,GAAGkB,KAAK;MACRN,UAAU,EAAEM,KAAK,CAACN,UAAU,CAACU,KAAK,EAAE,CAACC,IAAI,CAAClB,WAAW,CAAC,CAACmB,OAAO;IAClE,CAAC;EACL;EAAC;EACD,IAAGL,MAAM,CAACC,IAAI,KAAKnB,MAAM,EAAE;IACvB,MAAMwB,QAAQ,GAAGP,KAAK,CAACL,SAAS;IAChC,MAAMa,UAAU,GAChBP,MAAM,CAACE,OAAO,KAAK,UAAU,GAC3BI,QAAQ,GACRA,QAAQ,CAACE,MAAM,CAAC,QAAe;MAAA,IAAd;QAACZ;MAAO,CAAC;MACpB,OAAOA,OAAO,CAACa,IAAI,CAAC;QAAA,IAAC;UAACC;QAAM,CAAC;QAAA,OAAKA,MAAM,KAAKV,MAAM,CAACE,OAAO;MAAA,EAAC;IAAA,CAAC,CAC3D;IACD,OAAO;MACH,GAAGH,KAAK;MACRN,UAAU,EAAEc;IAChB,CAAC;EACd;EAAC;EACD,IAAGP,MAAM,CAACC,IAAI,KAAKlB,OAAO,EAAE;IACxB,MAAM4B,MAAM,GAAGZ,KAAK,CAACL,SAAS;IAC9B,IAAIkB,aAAa;IACjB,IAAGZ,MAAM,CAACE,OAAO,KAAK,MAAM,EAAE;MAC1BU,aAAa,GAAGD,MAAM;IAC1B;IACA,IAAGX,MAAM,CAACE,OAAO,KAAK,MAAM,EAAE;MAC1BU,aAAa,GAAGD,MAAM,CAACH,MAAM,CAAEK,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAK,IAAI,CAAC;IAC3D;IACA,IAAGd,MAAM,CAACE,OAAO,KAAK,OAAO,EAAE;MAC3BU,aAAa,GAAGD,MAAM,CAACH,MAAM,CAAEK,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAK,KAAK,CAAC;IAC5D;IACA,OAAQ;MACA,GAAGf,KAAK;MACRN,UAAU,EAAEmB;IACX,CAAC;EACd;EAAC;EACD,IAAGZ,MAAM,CAACC,IAAI,KAAKjB,YAAY,EAAE;IAC7B,OAAO;MACH,GAAGe,KAAK;MACRN,UAAU,EAAEM,KAAK,CAACN,UAAU,CAACU,KAAK,EAAE,CAACC,IAAI,CAACd,SAAS,CAAC,CAACe,OAAO;IAChE,CAAC;EACL;EACA,IAAGL,MAAM,CAACC,IAAI,KAAKhB,YAAY,EAAE;IAC7B,OAAO;MACH,GAAGc,KAAK;MACRN,UAAU,EAAEM,KAAK,CAACN,UAAU,CAACU,KAAK,EAAE,CAACC,IAAI,CAACd,SAAS;IACvD,CAAC;EACL;EACA,OAAOS,KAAK;AAChB;AAEA,eAAeD,WAAW;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}