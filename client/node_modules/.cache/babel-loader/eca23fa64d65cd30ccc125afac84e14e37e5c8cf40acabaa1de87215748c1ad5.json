{"ast":null,"code":"import axios from 'axios';\nexport const GET_VIDEOGAMES = \"GET_VIDEOGAMES\",\n  GET_VIDEOGAME_NAME = \"GET_VIDEOGAME_NAME\",\n  GET_VIDEOGAME_ID = \"GET_VIDEOGAME_ID\",\n  GET_PLATFORMS = \"GET_PLATFORMS\",\n  GET_GENEROS = \"GET_GENEROS\",\n  NAME_ORDER_A = \"NAME_ORDER_A\",\n  NAME_ORDER_Z = \"NAME_ORDER_Z\",\n  GENERO = \"GENERO\",\n  CREATED = \"CREATED\",\n  GAME_RTN_MAX = \"GAME_RTN_MAX\",\n  GAME_RTN_MIN = \"GAME_RTN_MIN\";\nexport function getVideoGame() {\n  return async function (dispatch) {\n    try {\n      const json = await axios.get(\"http://localhost:3003/Videogame\");\n      return dispatch({\n        type: \"GET_VIDEOGAMES\",\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    ;\n  };\n}\nexport function getVideoGameName(Titulo) {\n  return async function (dispatch) {\n    try {\n      const json = await axios.get(\"http://localhost:3003/Videogame?Titulo=\" + Titulo);\n      console.log(json);\n      return dispatch({\n        type: \"GET_VIDEOGAME_NAME\",\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(\"No se mostró el Juego\");\n    }\n  };\n}\nexport function getVideogameID(ID) {\n  return async function (dispatch) {\n    try {\n      const json = await axios.get(`http://localhost:3003/Videogame/${ID}`);\n      return dispatch({\n        type: \"GET_VIDEOGAME_ID\",\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(`No se encontró el Juego con ${ID}`);\n    }\n  };\n}\nexport function getPlatforms() {\n  return async function (dispatch) {\n    try {\n      const json = await axios.get(\"http://localhost:3003/Videogame/Consolas\");\n      return dispatch({\n        type: \"GET_PLATFORMS\",\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(\"No se mostró la plataforma\");\n    }\n  };\n}\nexport function getGeneros() {\n  return async function (dispatch) {\n    try {\n      const json = await axios.get(\"http://localhost:3003/Genre\");\n      return dispatch({\n        type: \"GET_GENEROS\",\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(\"No se mostró el Genero\");\n    }\n  };\n}\nexport function createVideogame(videogame) {\n  console.log(\"Videogame: \", videogame);\n  return async function () {\n    try {\n      const addGame = await axios.post(\"http://localhost:3003/Videogame\", videogame);\n      console.log(addGame);\n    } catch (error) {\n      console.log(\"No se mostró el Juego\");\n    }\n  };\n}\nexport function Name_OrderA() {\n  return {\n    type: NAME_ORDER_A\n  };\n}\n_c = Name_OrderA;\nexport function Name_OrderZ() {\n  return {\n    type: NAME_ORDER_Z\n  };\n}\n_c2 = Name_OrderZ;\nexport function Genre(payload) {\n  return {\n    type: GENERO,\n    payload\n  };\n}\n_c3 = Genre;\nexport function Created(payload) {\n  return {\n    type: CREATED,\n    payload\n  };\n}\n_c4 = Created;\nexport function Game_Rtn_Max() {\n  return {\n    type: GAME_RTN_MAX\n  };\n}\n_c5 = Game_Rtn_Max;\nexport function Game_Rtn_Min() {\n  return {\n    type: GAME_RTN_MIN\n  };\n}\n\n/*export function Get_heroes(cantidad) {\r\n    return function(dispatch) {\r\n        const requests = Array.from({length: cantidad}, (_, i) => \r\n        fetch(`https://www.superheroapi.com/api.php/${token}/${i+1}`));\r\n        Promise.all(requests)\r\n        .then(response => {\r\n            let hero = []; \r\n            response.map((e) => e.json()\r\n            .then(json => {\r\n                hero.push(json)\r\n                if(hero.length === cantidad) {\r\n                    return dispatch ({type: GET_HEROES, payload: hero})\r\n                }\r\n            }))\r\n        })\r\n    }\r\n}*/\n_c6 = Game_Rtn_Min;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Name_OrderA\");\n$RefreshReg$(_c2, \"Name_OrderZ\");\n$RefreshReg$(_c3, \"Genre\");\n$RefreshReg$(_c4, \"Created\");\n$RefreshReg$(_c5, \"Game_Rtn_Max\");\n$RefreshReg$(_c6, \"Game_Rtn_Min\");","map":{"version":3,"names":["axios","GET_VIDEOGAMES","GET_VIDEOGAME_NAME","GET_VIDEOGAME_ID","GET_PLATFORMS","GET_GENEROS","NAME_ORDER_A","NAME_ORDER_Z","GENERO","CREATED","GAME_RTN_MAX","GAME_RTN_MIN","getVideoGame","dispatch","json","get","type","payload","data","error","console","log","getVideoGameName","Titulo","getVideogameID","ID","getPlatforms","getGeneros","createVideogame","videogame","addGame","post","Name_OrderA","Name_OrderZ","Genre","Created","Game_Rtn_Max","Game_Rtn_Min"],"sources":["C:/Users/JC REPARACIONES/Desktop/Visual Studio Code/HENRY/PI/PI-Videogames/PI-Videogames-16a/client/src/redux/actions/index.js"],"sourcesContent":["import axios from 'axios';\r\nexport const GET_VIDEOGAMES = \"GET_VIDEOGAMES\",\r\nGET_VIDEOGAME_NAME = \"GET_VIDEOGAME_NAME\",\r\nGET_VIDEOGAME_ID = \"GET_VIDEOGAME_ID\",\r\nGET_PLATFORMS = \"GET_PLATFORMS\",\r\nGET_GENEROS = \"GET_GENEROS\",\r\nNAME_ORDER_A = \"NAME_ORDER_A\",\r\nNAME_ORDER_Z = \"NAME_ORDER_Z\",\r\nGENERO = \"GENERO\",\r\nCREATED = \"CREATED\",\r\nGAME_RTN_MAX = \"GAME_RTN_MAX\",\r\nGAME_RTN_MIN = \"GAME_RTN_MIN\"\r\n\r\nexport function getVideoGame() {\r\n    return async function(dispatch) {\r\n        try {\r\n            const json = await axios.get(\"http://localhost:3003/Videogame\");\r\n            return dispatch({ type: \"GET_VIDEOGAMES\", payload: json.data})\r\n        } catch(error) {\r\n            console.log(error)\r\n        };\r\n    }\r\n}\r\n\r\nexport function getVideoGameName(Titulo) {\r\n    return async function(dispatch) {\r\n        try {\r\n            const json = await axios.get(\"http://localhost:3003/Videogame?Titulo=\" + Titulo);\r\n            console.log(json)\r\n            return dispatch({ type: \"GET_VIDEOGAME_NAME\", payload: json.data})\r\n        } catch(error) {\r\n            console.log(\"No se mostró el Juego\")\r\n        }\r\n    }\r\n}\r\n\r\nexport function getVideogameID(ID) {\r\n    return async function(dispatch) {\r\n        try {\r\n            const json = await axios.get(`http://localhost:3003/Videogame/${ID}`);\r\n            return dispatch({ type: \"GET_VIDEOGAME_ID\", payload: json.data})\r\n        } catch(error) {\r\n            console.log(`No se encontró el Juego con ${ID}`)\r\n        }\r\n    }\r\n}\r\n\r\nexport function getPlatforms() {\r\n    return async function(dispatch) {\r\n        try {\r\n            const json = await axios.get(\"http://localhost:3003/Videogame/Consolas\");\r\n            return dispatch({ type: \"GET_PLATFORMS\", payload: json.data})\r\n        } catch(error) {\r\n            console.log(\"No se mostró la plataforma\")\r\n        }\r\n    }\r\n}\r\n\r\nexport function getGeneros() {\r\n    return async function(dispatch) {\r\n        try {\r\n            const json = await axios.get(\"http://localhost:3003/Genre\");\r\n            return dispatch({ type: \"GET_GENEROS\", payload: json.data})\r\n        } catch(error) {\r\n            console.log(\"No se mostró el Genero\")\r\n        }\r\n    }\r\n}\r\n\r\nexport function createVideogame(videogame) {\r\n    console.log(\"Videogame: \", videogame)\r\n    return async function() {\r\n        try {\r\n            const addGame = await axios.post(\"http://localhost:3003/Videogame\", videogame);\r\n            console.log(addGame)\r\n        } catch(error) {\r\n            console.log(\"No se mostró el Juego\")\r\n        }\r\n    }\r\n}\r\n\r\nexport function Name_OrderA() {\r\n    return {\r\n        type: NAME_ORDER_A,\r\n    }\r\n}\r\n\r\nexport function Name_OrderZ() {\r\n    return {\r\n        type: NAME_ORDER_Z,\r\n    }\r\n}\r\n\r\nexport function Genre(payload) {\r\n    return {\r\n        type: GENERO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function Created(payload) {\r\n    return {\r\n        type: CREATED,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport function Game_Rtn_Max() {\r\n    return {\r\n    type: GAME_RTN_MAX,\r\n    }\r\n}\r\n\r\nexport function Game_Rtn_Min() {\r\n    return {\r\n        type: GAME_RTN_MIN,\r\n    }\r\n}\r\n\r\n/*export function Get_heroes(cantidad) {\r\n    return function(dispatch) {\r\n        const requests = Array.from({length: cantidad}, (_, i) => \r\n        fetch(`https://www.superheroapi.com/api.php/${token}/${i+1}`));\r\n        Promise.all(requests)\r\n        .then(response => {\r\n            let hero = []; \r\n            response.map((e) => e.json()\r\n            .then(json => {\r\n                hero.push(json)\r\n                if(hero.length === cantidad) {\r\n                    return dispatch ({type: GET_HEROES, payload: hero})\r\n                }\r\n            }))\r\n        })\r\n    }\r\n}*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}